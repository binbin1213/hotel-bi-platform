"""添加rooms_occupied字段到HotelData表

Revision ID: ee05f9f18ce9
Revises: 
Create Date: 2025-06-14 02:44:11.707085

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ee05f9f18ce9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hotel_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('hotel_name', sa.String(length=200), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('room_count', sa.Integer(), nullable=True),
    sa.Column('rooms_occupied', sa.Integer(), nullable=True),
    sa.Column('occupancy_rate', sa.Float(), nullable=True),
    sa.Column('revenue', sa.Float(), nullable=True),
    sa.Column('adr', sa.Float(), nullable=True),
    sa.Column('revpar', sa.Float(), nullable=True),
    sa.Column('date_recorded', sa.Date(), nullable=True),
    sa.Column('data_source', sa.String(length=100), nullable=True),
    sa.Column('is_validated', sa.Boolean(), nullable=True),
    sa.Column('validation_errors', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hotel_data_date_recorded'), 'hotel_data', ['date_recorded'], unique=False)
    op.create_index(op.f('ix_hotel_data_hotel_name'), 'hotel_data', ['hotel_name'], unique=False)
    op.create_index(op.f('ix_hotel_data_id'), 'hotel_data', ['id'], unique=False)
    op.create_table('report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('title', sa.String(length=300), nullable=False),
    sa.Column('report_type', sa.String(length=50), nullable=True),
    sa.Column('content_data', sa.JSON(), nullable=True),
    sa.Column('ai_insights', sa.Text(), nullable=True),
    sa.Column('file_paths', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_report_id'), 'report', ['id'], unique=False)
    op.create_index(op.f('ix_report_report_type'), 'report', ['report_type'], unique=False)
    op.create_index(op.f('ix_report_status'), 'report', ['status'], unique=False)
    op.create_table('task_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('task_id', sa.String(length=100), nullable=False),
    sa.Column('task_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('result_data', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_status_id'), 'task_status', ['id'], unique=False)
    op.create_index(op.f('ix_task_status_status'), 'task_status', ['status'], unique=False)
    op.create_index(op.f('ix_task_status_task_id'), 'task_status', ['task_id'], unique=True)
    op.create_index(op.f('ix_task_status_task_type'), 'task_status', ['task_type'], unique=False)
    op.create_table('kpi_metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('hotel_id', sa.Integer(), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('metric_value', sa.Float(), nullable=True),
    sa.Column('metric_type', sa.String(length=50), nullable=True),
    sa.Column('period_type', sa.String(length=20), nullable=True),
    sa.Column('period_start', sa.Date(), nullable=True),
    sa.Column('period_end', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['hotel_id'], ['hotel_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_kpi_metric_hotel_id'), 'kpi_metric', ['hotel_id'], unique=False)
    op.create_index(op.f('ix_kpi_metric_id'), 'kpi_metric', ['id'], unique=False)
    op.create_index(op.f('ix_kpi_metric_metric_type'), 'kpi_metric', ['metric_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_kpi_metric_metric_type'), table_name='kpi_metric')
    op.drop_index(op.f('ix_kpi_metric_id'), table_name='kpi_metric')
    op.drop_index(op.f('ix_kpi_metric_hotel_id'), table_name='kpi_metric')
    op.drop_table('kpi_metric')
    op.drop_index(op.f('ix_task_status_task_type'), table_name='task_status')
    op.drop_index(op.f('ix_task_status_task_id'), table_name='task_status')
    op.drop_index(op.f('ix_task_status_status'), table_name='task_status')
    op.drop_index(op.f('ix_task_status_id'), table_name='task_status')
    op.drop_table('task_status')
    op.drop_index(op.f('ix_report_status'), table_name='report')
    op.drop_index(op.f('ix_report_report_type'), table_name='report')
    op.drop_index(op.f('ix_report_id'), table_name='report')
    op.drop_table('report')
    op.drop_index(op.f('ix_hotel_data_id'), table_name='hotel_data')
    op.drop_index(op.f('ix_hotel_data_hotel_name'), table_name='hotel_data')
    op.drop_index(op.f('ix_hotel_data_date_recorded'), table_name='hotel_data')
    op.drop_table('hotel_data')
    # ### end Alembic commands ###
